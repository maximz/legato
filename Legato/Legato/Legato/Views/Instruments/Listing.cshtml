@model Legato.ViewModels.ReadListingViewModel

@{
	ViewBag.Title = Model.Instrument.Title;
	ViewBag.revNum = Legato.Current.RevNumber();
}

<section class="NavContent">
	<div class="LMidBlock">
	  <p class="TopHdg"><span class="about">instruments</span></p>
	  <ul>
		<li><a href="@Url.Action("Index", "Instruments")" class="act" title="map">map</a></li>
		<li><a href="@Url.Action("Submit", "Instruments")" class="act" title="submit">submit</a></li>
		<li><a href="@Url.Action("Individual",new { instrumentID = Model.Instrument.InstrumentID})" class="act" title="listing">listing</a>
		</li>
	  </ul>
	</div>
	
	<!-- Left section --></section>


<section class="ContentWrapper">
	<div class="ContentRpt">
	  <div class="ContentTop">
		<div class="ContentBtm container">
		  <div id="listingHeader" class="span-16 append-1 colborder">
		  <h2 class="contentHeaderText alt">@Model.Instrument.InstrumentType.Name <span class="small">for @Model.Instrument.ListingClass</span></h2>
		  <h2><em>@Model.Instrument.VenueName</em> <span class="small">(@Model.Instrument.StreetAddress)</span></h2>
		  @if (Model.Instrument.Price.HasValue)
		  {
			<text><h3 class="quiet">@Model.Instrument.Price.Value <i>per</i> @Html.Encode(Model.Instrument.TimeSpanOfPrice)</h3></text>
		  }
		  <div id="actions">@Html.Action(MVC.Instruments.UserLinksForListing(Model.Instrument.InstrumentID))</div>
		  </div>
		  
		  <div id="listingMap" class="span-7 last">
			<a href="http://maps.google.com/?q=@(Model.Instrument.Lat),@(Model.Instrument.Long)"><img class="right top" style="float: right; width: 200px; height: 200px;" src="http://maps.googleapis.com/maps/api/staticmap?size=200x200&maptype=roadmap\&markers=size:mid%7Ccolor:red%7C@(Model.Instrument.Lat),@(Model.Instrument.Long)&sensor=false&zoom=14" /></a>
			<hr class="space" />
			<div class="userbox box">
				<p>by @Model.Instrument.aspnet_User.UserName</p>
				<p>submitted <span class="timeago" title="@Model.Instrument.SubmissionDate">@Model.Instrument.SubmissionDate</span></p>
				<p>last reviewed <span class="timeago" title="@Model.Instrument.LatestReviewRevisionDate">@Model.Instrument.LatestReviewRevisionDate</span></p>
			</div>
		  </div>
		  <hr class="space" />
		  
		  <div id="averageRating">Average Rating: @Model.Instrument.AverageOverallRating</div>
		  <hr />
		  <hr class="space" />
		  
		  <article class="networkBox">
			<section class="contentMain">
			  <div id="reviews">
<h2>Reviews (@Model.Instrument.NumberOfReviews)</h2>
@if (Model.Reviews == null || Model.Reviews.Count() < 1)
{
	<h2 class="alt centered">No reviews yet. @Html.ActionLink("Add one now?", MVC.Instruments.Review(Model.Instrument.InstrumentID))</h2>
}
else
{
	foreach (var r in Model.Reviews)
	 {
		<div class="review" id="review-@r.ReviewID">
			<div class="ratings">
			    <div id="rate-general-@r.ReviewID"></div>
			</div>
			<div class="message">
				@(new HtmlString(r.Revisions.First().MessageHTML))
			</div>
			<div class="details">
			</div>
			<div class="actions">
				@Html.Action(MVC.Instruments.UserLinksForReview(r.ReviewID))
			</div>
			<p class="userbox">
				by @r.aspnet_User.UserName<br />
				submitted <span class="timeago" title="@r.SubmissionDate">@r.SubmissionDate</span>
				@if(r.Revisions.Count()>1) { <text><br />edited @r.Revisions.Count() times</text> }
			</p>
		</div>
	 }
	 if (Model.IsFilteredToIndividualReview.GetValueOrDefault(false))
	 {
		<p>Only one review currently being displayed. @Html.ActionLink("Show the rest?","Individual", new {instrumentID = Model.Instrument.InstrumentID, slug = Model.Instrument.UrlSlug })</p>
	 }
	 <p>@Html.ActionLink("Add a Review",MVC.Instruments.Review(Model.Instrument.InstrumentID))</p>
}

</div>
			</section>
			<!-- network article --></article>
		</div>
	  </div>
	</div>
	
	<!-- Right section --></section>

@section ScriptContentAtEndOfBody {
<script src="@Url.Content("~/static/js/jquery.raty.min.js")?@ViewBag.revNum" type="text/javascript"></script>

<script>

$('#averageRating').raty({
  cancel:     false,
  readOnly:   true,
  start:  @(Model.Instrument.AverageOverallRating),
  size: 24,
  path:       '/static/images/raty/'
});

// Star ratings in each review:

@foreach (var r in Model.Reviews)
{
	<text>$('#rate-general-@r.ReviewID').raty({
  cancel:     false,
  readOnly:   true,
  start:  @(r.Revisions.First().RatingGeneral),
  path:       '/static/images/raty/'
});
</text>
}

</script>
}