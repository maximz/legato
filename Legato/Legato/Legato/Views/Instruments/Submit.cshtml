@model Legato.ViewModels.SubmitViewModel

@{
	ViewBag.Title = "Submit";
}

@section ScriptContentAtEndOfBody {
<script src="@Url.Content("~/static/js/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/static/js/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/static/js/jquery.raty.min.js")" type="text/javascript"></script>

<script>

$('#rate-overall').raty({
  cancel:     false,
  scoreName:  '#ReviewRevision_RatingOverall',
  path:       '/static/images/raty/'
});


// check whether Model already has the ratings set. If so, do raty.start(number) on each one that's set

@if(Model.ReviewRevision.RatingOverall!=null && Model.ReviewRevision.RatingOverall != 0)
{
	<text>$.fn.raty.start(@Model.ReviewRevision.RatingOverall, '#rate-overall');</text>
}
</script>
}

<h2>Submit</h2>

@using (Html.BeginForm()) {
	@Html.ValidationSummary(true)
<fieldset>
			<legend>Listing</legend>
			
			<div class="editor-label">
				@Html.LabelFor(model => model.Listing.StreetAddress)
			</div>
			<div class="editor-field">
				@Html.TextBoxFor(model => model.Listing.StreetAddress)
				@Html.ValidationMessageFor(model => model.Listing.StreetAddress)
			</div>

			<div class="editor-label">
				@Html.LabelFor(model => model.Listing.VenueName)
			</div>
			<div class="editor-field">
				@Html.TextBoxFor(model => model.Listing.VenueName)
				@Html.ValidationMessageFor(model => model.Listing.VenueName)
			</div>

			<div class="editor-label">
				@Html.LabelFor(model => model.Listing.Equipment.Brand)
			</div>
			<div class="editor-field">
				@Html.TextBoxFor(model => model.Listing.Equipment.Brand)
				@Html.ValidationMessageFor(model => model.Listing.Equipment.Brand)
			</div>

			<div class="editor-label">
				@Html.LabelFor(model => model.Listing.Equipment.Model)
			</div>
			<div class="editor-field">
				@Html.TextBoxFor(model => model.Listing.Equipment.Model)
				@Html.ValidationMessageFor(model => model.Listing.Equipment.Model)
			</div>

			<div class="editor-label">
				@Html.LabelFor(model => model.Listing.Equipment.SelectedClass)
			</div>
			<div class="editor-field">
				@Html.DropDownListFor(model => model.Listing.Equipment.SelectedClass, Model.Listing.Equipment.Classes)
				@Html.ValidationMessageFor(model => model.Listing.Equipment.SelectedClass)
			</div>

			<div class="editor-label">
				@Html.LabelFor(model => model.Listing.Equipment.SelectedType)
			</div>
			<div class="editor-field">
				@Html.DropDownListFor(model => model.Listing.Equipment.SelectedType, Model.Listing.Equipment.Types)
				@Html.ValidationMessageFor(model => model.Listing.Equipment.SelectedType)
			</div>

			<div class="editor-label">
				@Html.LabelFor(model => model.Listing.Price)
			</div>
			<div class="editor-field">
				@Html.TextBoxFor(model => model.Listing.Price, new { title = "price in local currency" }) per @Html.TextBoxFor(model => model.Listing.TimeSpanOfPrice, new { title = "year, month, day, hour, etc."})
				@Html.ValidationMessageFor(model => model.Listing.Price)
                @Html.ValidationMessageFor(model => model.Listing.TimeSpanOfPrice)
			</div>

			<!--<div class="editor-label">
				@Html.LabelFor(model => model.Listing.GeneralInfoMarkdown)
			</div>
			<div class="editor-field">
				@Html.TextAreaFor(model => model.Listing.GeneralInfoMarkdown, new { @class="wmd", id="wmd-input" })
                <div id="wmd-preview"></div>
				@Html.ValidationMessageFor(model => model.Listing.GeneralInfoMarkdown)
			</div> -->
			</fieldset>
	<fieldset>
	<legend>Hours of Availability</legend>
	<p>Please list the hours of availability of this instrument.</p>
			@foreach (var m in Model.Hours)
			{
				<div class="editor-label">
					<b><label for="hours-@(m.DayOfWeekId)">@m.DayOfWeekName</label></b>
				</div>
					<div id="hours-@(m.DayOfWeekId)" class="editor-field">
						@Html.TextBoxFor(model => model.Hours[m.DayOfWeekId].StartTime, new { title="Opens at..."})
						@Html.ValidationMessageFor(model => model.Hours[m.DayOfWeekId].StartTime)

						@Html.TextBoxFor(model => model.Hours[m.DayOfWeekId].EndTime, new { title = "Closes at..." })
						@Html.ValidationMessageFor(model => model.Hours[m.DayOfWeekId].EndTime)

						@Html.CheckBoxFor(model => model.Hours[m.DayOfWeekId].Closed)
						@Html.LabelFor(model => model.Hours[m.DayOfWeekId].Closed)
						@Html.ValidationMessageFor(model => model.Hours[m.DayOfWeekId].Closed)
					</div>
			}
	</fieldset>
	<fieldset>
	<legend>Review</legend>
	<div>
		@Html.HiddenFor(m=>m.ReviewRevision.RatingOverall)

		<div class="editor-label">
			@Html.LabelFor(model => model.ReviewRevision.RatingOverall)
		</div>
		<div class="editor-field">
			<div id="rate-overall"></div>
			@Html.ValidationMessageFor(model => model.ReviewRevision.RatingOverall)
		</div>

	</div>
			<div class="editor-label">
				@Html.LabelFor(model => model.ReviewRevision.ReviewMarkdown)
			</div>
			<div class="editor-field wmd-panel">
				<div id="wmd-button-bar" class="wmd-panel"></div>
				@Html.TextAreaFor(model => model.ReviewRevision.ReviewMarkdown, new { @class = "wmd-panel", id="wmd-input" })
				@Html.ValidationMessageFor(model => model.ReviewRevision.ReviewMarkdown)
				<div id="wmd-preview" class="wmd-panel"></div>
			</div>

			<div class="editor-label">
				@Html.LabelFor(model => model.ReviewRevision.DateOfLastUsage)
			</div>
			<div class="editor-field">
				@Html.TextBoxFor(model => model.ReviewRevision.DateOfLastUsage, new { @class="dateinput"})
				@Html.ValidationMessageFor(model => model.ReviewRevision.DateOfLastUsage)
			</div>
			</fieldset>
			<p>
				<input type="submit" value="Create" />
			</p>
		
}

<div>
	@Html.ActionLink("Back to List", "Index")
</div>
