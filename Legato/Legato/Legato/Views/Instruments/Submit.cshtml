@model Legato.ViewModels.SubmitViewModel

@{
	ViewBag.Title = "Submit";
	ViewBag.revNum = Legato.Current.RevNumber();
}

@section ScriptContentAtEndOfBody {
<script src="@Url.Content("~/static/js/jquery.validate.min.js")?@ViewBag.revNum" type="text/javascript"></script>
<script src="@Url.Content("~/static/js/jquery.validate.unobtrusive.min.js")?@ViewBag.revNum" type="text/javascript"></script>
<script src="@Url.Content("~/static/js/jquery.raty.min.js")?@ViewBag.revNum" type="text/javascript"></script>

<script>

(function () {
                var converter1 = Markdown.getSanitizingConverter();
                var editor1 = new Markdown.Editor(converter1);
                editor1.run();

                var converter2 = Markdown.getSanitizingConverter();
                var editor2 = new Markdown.Editor(converter2, '-second');
                editor2.run();
})();

$('#rate_overall').raty({
  cancel:     false,
  scoreName:  '#ReviewRevision_RatingOverall',
  path:       '/static/images/raty/',
  click: function(score, evt) {
	$('#ReviewRevision_RatingOverall').val(score);
  }
});


// check whether Model already has the ratings set. If so, do raty.start(number) on each one that's set

@if (Model.ReviewRevision.RatingOverall != null && Model.ReviewRevision.RatingOverall != 0)
{
	<text>$.fn.raty.start(@Model.ReviewRevision.RatingOverall, '#rate_overall');</text>
}
</script>
}

<section id="submit">
  <div class="page-header">
	<h1>Submit <small>List an instrument in Legato Network</small></h1>
  </div>
	  <!-- Example row of columns -->
	  <div class="row">
		<div class="span16">

@using (Html.BeginForm())
{
	@Html.ValidationSummary(true)
	<fieldset>
			<legend>Instrument details</legend>
			
			<div class="clearfix">
				@Html.LabelFor(model => model.Listing.Equipment.SelectedType)
			<div class="input">
				@Html.DropDownListFor(model => model.Listing.Equipment.SelectedType, Model.Listing.Equipment.Types)
				@Html.ValidationMessageFor(model => model.Listing.Equipment.SelectedType)
			</div></div>
			
			<div class="clearfix">
				@Html.LabelFor(model => model.Listing.StreetAddress)
			<div class="input">
				@Html.TextBoxFor(model => model.Listing.StreetAddress)
				@Html.ValidationMessageFor(model => model.Listing.StreetAddress)
			</div></div>

			<div class="clearfix">
				@Html.LabelFor(model => model.Listing.VenueName)
			<div class="input">
				@Html.TextBoxFor(model => model.Listing.VenueName)
				@Html.ValidationMessageFor(model => model.Listing.VenueName)
			</div></div>

			<div class="clearfix">
				@Html.LabelFor(model => model.Listing.Equipment.SelectedClass)
			<div class="input">
				@Html.DropDownListFor(model => model.Listing.Equipment.SelectedClass, Model.Listing.Equipment.Classes)
				@Html.ValidationMessageFor(model => model.Listing.Equipment.SelectedClass)
			</div></div>



			<div class="clearfix">
				@Html.LabelFor(model => model.Listing.Price)
			<div class="input">
				@Html.TextBoxFor(model => model.Listing.Price, new { title = "price in local currency" }) per @Html.TextBoxFor(model => model.Listing.TimeSpanOfPrice, new { title = "year, month, day, hour, etc." })
				@Html.ValidationMessageFor(model => model.Listing.Price)
				@Html.ValidationMessageFor(model => model.Listing.TimeSpanOfPrice)
			</div></div>

            <div class="clearfix">
				@Html.LabelFor(model => model.Listing.GeneralInfoMarkdown)
			<div class="input wmd-panel">
				@Html.ValidationMessageFor(model => model.Listing.GeneralInfoMarkdown)
				<div id="wmd-button-bar" class="wmd-panel"></div>
				@Html.TextAreaFor(model => model.Listing.GeneralInfoMarkdown, new { @class = "wmd-input", id = "wmd-input" })
				<div id="wmd-preview" class="wmd-preview wmd-panel"></div>
			</div></div>
	</fieldset>
	<fieldset>
	<legend>Review</legend>
	<div>
		@Html.HiddenFor(m => m.ReviewRevision.RatingOverall)

		<div class="clearfix">
			@Html.LabelFor(model => model.ReviewRevision.RatingOverall)
		<div class="input">
			<div id="rate_overall"></div>
			@Html.ValidationMessageFor(model => model.ReviewRevision.RatingOverall)
		</div></div>

	</div>
			<div class="clearfix">
				@Html.LabelFor(model => model.ReviewRevision.ReviewMarkdown)
			<div class="input wmd-panel">
				@Html.ValidationMessageFor(model => model.ReviewRevision.ReviewMarkdown)
				<div id="wmd-button-bar-second" class="wmd-panel"></div>
				@Html.TextAreaFor(model => model.ReviewRevision.ReviewMarkdown, new { @class = "wmd-input", id = "wmd-input-second" })
				<div id="wmd-preview-second" class="wmd-preview wmd-panel"></div>
			</div></div>

			</fieldset>
		  <div class="actions well">
			<input type="submit" class="btn primary large" value="Save changes">&nbsp;<button type="reset" onclick="window.history.go(-1);" class="btn">Cancel</button>
		  </div>
		
}
		</div>
	  </div> <!-- /row -->
	  
	</section>