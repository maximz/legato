// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Legato.Controllers {
    public partial class AccountController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected AccountController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

		[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
		protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result) {
			var callInfo = result.GetT4MVCResult();
			return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
		}

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Login() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Login);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Authenticate() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Authenticate);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult OpenidRegisterFormSubmit() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.OpenidRegisterFormSubmit);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult VerifyEmailAddress() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.VerifyEmailAddress);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public AccountController Actions { get { return MVC.Account; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Account";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string Login = "Login";
            public readonly string Authenticate = "Authenticate";
            public readonly string OpenidRegisterFormSubmit = "OpenidRegisterFormSubmit";
            public readonly string LogOff = "LogOff";
            public readonly string LogOut = "LogOut";
            public readonly string ShowSuspensionStatus = "ShowSuspensionStatus";
            public readonly string ShowEmailAddressVerificationStatus = "ShowEmailAddressVerificationStatus";
            public readonly string ResendVerificationEmail = "ResendVerificationEmail";
            public readonly string VerifyEmailAddress = "VerifyEmailAddress";
            public readonly string ForgotOpenID = "ForgotOpenID";
            public readonly string ChangePassword = "ChangePassword";
            public readonly string ChangeEmail = "ChangeEmail";
            public readonly string MyProfile = "MyProfile";
        }


        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string ChangeEmail = "~/Views/Account/ChangeEmail.cshtml";
            public readonly string ChangeEmailSuccess = "~/Views/Account/ChangeEmailSuccess.cshtml";
            public readonly string LogOff = "~/Views/Account/LogOff.cshtml";
            public readonly string MyProfile = "~/Views/Account/MyProfile.cshtml";
            public readonly string OpenidLogin = "~/Views/Account/OpenidLogin.cshtml";
            public readonly string OpenidRegister = "~/Views/Account/OpenidRegister.cshtml";
            public readonly string RecoverOpenID = "~/Views/Account/RecoverOpenID.cshtml";
            public readonly string SentForgotOpenidEmail = "~/Views/Account/SentForgotOpenidEmail.cshtml";
            public readonly string ShowSuspensionStatus = "~/Views/Account/ShowSuspensionStatus.cshtml";
            public readonly string TimeToValidateYourEmailAddress = "~/Views/Account/TimeToValidateYourEmailAddress.cshtml";
            public readonly string VerifyEmailAddressSuccess = "~/Views/Account/VerifyEmailAddressSuccess.cshtml";
            public readonly string WhiteListBlock = "~/Views/Account/WhiteListBlock.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_AccountController: Legato.Controllers.AccountController {
        public T4MVC_AccountController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult Login(System.Guid? OneTimeSignupCode) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Login);
            callInfo.RouteValueDictionary.Add("OneTimeSignupCode", OneTimeSignupCode);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Authenticate(string returnUrl) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Authenticate);
            callInfo.RouteValueDictionary.Add("returnUrl", returnUrl);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult OpenidRegisterFormSubmit(Legato.ViewModels.OpenIdRegistrationViewModel model, bool captchaValid) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.OpenidRegisterFormSubmit);
            callInfo.RouteValueDictionary.Add("model", model);
            callInfo.RouteValueDictionary.Add("captchaValid", captchaValid);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult LogOff() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.LogOff);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult LogOut() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.LogOut);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ShowSuspensionStatus() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ShowSuspensionStatus);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ShowEmailAddressVerificationStatus() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ShowEmailAddressVerificationStatus);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ResendVerificationEmail() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ResendVerificationEmail);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult VerifyEmailAddress(System.Guid confirmId) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.VerifyEmailAddress);
            callInfo.RouteValueDictionary.Add("confirmId", confirmId);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ForgotOpenID() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ForgotOpenID);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ForgotOpenID(string email) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ForgotOpenID);
            callInfo.RouteValueDictionary.Add("email", email);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ChangePassword() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ChangePassword);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ChangePassword(string currentPassword, string newPassword, string confirmPassword) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ChangePassword);
            callInfo.RouteValueDictionary.Add("currentPassword", currentPassword);
            callInfo.RouteValueDictionary.Add("newPassword", newPassword);
            callInfo.RouteValueDictionary.Add("confirmPassword", confirmPassword);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ChangeEmail() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ChangeEmail);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ChangeEmail(string NewEmail, string ConfirmEmail) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ChangeEmail);
            callInfo.RouteValueDictionary.Add("NewEmail", NewEmail);
            callInfo.RouteValueDictionary.Add("ConfirmEmail", ConfirmEmail);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult MyProfile() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.MyProfile);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591
