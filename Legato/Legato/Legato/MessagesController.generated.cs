// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Legato.Controllers {
    public partial class MessagesController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public MessagesController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected MessagesController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

		[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
		protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result) {
			var callInfo = result.GetT4MVCResult();
			return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
		}

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Thread() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Thread);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult ThreadWithModel() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.ThreadWithModel);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Message() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Message);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Reply() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Reply);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.JsonResult Flag() {
            return new T4MVC_JsonResult(Area, Name, ActionNames.Flag);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult ComposeFromMessage() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.ComposeFromMessage);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Compose() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Compose);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public MessagesController Actions { get { return MVC.Messages; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Messages";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string List = "List";
            public readonly string Thread = "Thread";
            public readonly string ThreadWithModel = "ThreadWithModel";
            public readonly string Message = "Message";
            public readonly string Reply = "Reply";
            public readonly string Flag = "Flag";
            public readonly string ComposeFromMessage = "ComposeFromMessage";
            public readonly string Compose = "Compose";
        }


        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string Compose = "~/Views/Messages/Compose.cshtml";
            public readonly string List = "~/Views/Messages/List.cshtml";
            public readonly string Thread = "~/Views/Messages/Thread.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_MessagesController: Legato.Controllers.MessagesController {
        public T4MVC_MessagesController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult List() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.List);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Thread(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Thread);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ThreadWithModel(int id, Legato.ViewModels.ThreadViewModel model) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ThreadWithModel);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("model", model);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Message(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Message);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Reply(Legato.ViewModels.ThreadViewModel model) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Reply);
            callInfo.RouteValueDictionary.Add("model", model);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult Flag(int id) {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.Flag);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ComposeFromMessage(int instrumentID) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ComposeFromMessage);
            callInfo.RouteValueDictionary.Add("instrumentID", instrumentID);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Compose(string username, string title) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Compose);
            callInfo.RouteValueDictionary.Add("username", username);
            callInfo.RouteValueDictionary.Add("title", title);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Compose(Legato.ViewModels.ComposeViewModel data) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Compose);
            callInfo.RouteValueDictionary.Add("data", data);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591
