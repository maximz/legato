@model Legato.ViewModels.EditListingViewModel

@{
	ViewBag.Title = "Edit Listing";
	ViewBag.revNum = Legato.Current.RevNumber();
    ViewBag.instrument = Current.DB.Instruments.Where(i=>i.InstrumentID==Model.Listing.InstrumentID).FirstOrDefault();
    ViewBag.instrument.FillProperties();
}

@section ScriptContentAtEndOfBody {
<script src="@Url.Content("~/static/js/jquery.validate.min.js")?@ViewBag.revNum" type="text/javascript"></script>
<script src="@Url.Content("~/static/js/jquery.validate.unobtrusive.min.js")?@ViewBag.revNum" type="text/javascript"></script>
<script src="@Url.Content("~/static/js/jquery.raty.min.js")?@ViewBag.revNum" type="text/javascript"></script>

<script>
    (function () {
        try {
		    var converter1 = Markdown.getSanitizingConverter();
		    var editor1 = new Markdown.Editor(converter1);
		    editor1.run();
        }
		catch (err) {
		    // catch errors thrown in the Markdown editor. Namely, there is an error thrown when the browser has a pop-up blocker that overrides scrollBy() with null, so calls to that fail. Without this try-catch block, the code beneath these lines wouldn't work in browsers with such a pop-up blocker installed.
		}
})();

// handle changes in selected class - change visibility of address privacy field
$("#Listing_Equipment_SelectedClass").change(function (e) {
    updatePrivacyVisibility();
});
function updatePrivacyVisibility() {
    $('#Listing_Equipment_SelectedClass option:selected').each(function () {
        //alert($(this).val() + $(this).text());
        if ($(this).val() == '2') // text = "My own instrument"
        {
            $('#privacyFields').show('slow');
        }
        else if ($(this).val() == '1') // text = "A public instrument"
        {
            $('#privacyFields').hide('slow');
        }
    });
}
(function() {
    updatePrivacyVisibility();
})();

</script>

}

<div class="row">
    <div class="span12">
        <ul class="breadcrumb">
            <li><a href="@Url.Action("Map", "Instruments")"><i class='icon-map-marker'></i> Instruments</a> <span class="divider">/</span></li>
            <li>@HtmlUtilities.RenderHtmlInRazor(Html.ActionLink("Listing", "Individual", "Instruments", new { instrumentID = Model.Listing.InstrumentID, slug = ViewBag.instrument.UrlSlug })) <span class="divider">/</span></li>
            <li class="active">Edit</li>
        </ul>
    </div>
</div>

<div class="page-header">
    <h1>Edit Listing</h1>
</div>

<div class="row">
    <div class="span12">
        @using (Html.BeginForm("EditListing", "Instruments", FormMethod.Post, new { @class = "form-horizontal" }))
        {
	        @Html.ValidationSummary(true)
	        <fieldset>
			    <legend>Instrument details</legend>
			    @Html.HiddenFor(model => model.Listing.InstrumentID)
                			
			    <div class="control-group" style="display:none;">
				    @Html.LabelFor(model => model.Listing.Equipment.SelectedType, new { @class = "control-label" })
			        <div class="controls">
				        @Html.DropDownListFor(model => model.Listing.Equipment.SelectedType, Model.Listing.Equipment.Types)
                        <p class="help-block">What kind of an instrument is this?</p>
				        @Html.ValidationMessageFor(model => model.Listing.Equipment.SelectedType)
			        </div>
                </div>
			
			    <div class="control-group">
				    @Html.LabelFor(model => model.Listing.StreetAddress, new { @class = "control-label" })
			        <div class="controls">
				        @Html.TextBoxFor(model => model.Listing.StreetAddress, new { @class = "input-xlarge" })
                        <p class="help-block">Where is this instrument located?<br/>Example: <code>1 Main Street, New York, NY 10044</code></p>
				        @Html.ValidationMessageFor(model => model.Listing.StreetAddress)
			        </div>
                </div>

                <div class="control-group" id="privacyFields" style="display:none;">
				    @Html.LabelFor(model => model.Listing.SelectedPrivacy, new { @class = "control-label" })
			        <div class="controls">
				        @Html.DropDownListFor(model => model.Listing.SelectedPrivacy, Model.Listing.PrivacySettings)
                        <p class="help-block">Please choose whether you want your full address to be displayed to regular users or just your region. <br />You can later choose to share your full address with specific users.</p>
				        @Html.ValidationMessageFor(model => model.Listing.SelectedPrivacy)
			        </div>
                </div>

			    <div class="control-group">
				    @Html.LabelFor(model => model.Listing.VenueName, new { @class = "control-label" })
			        <div class="controls">
				        @Html.TextBoxFor(model => model.Listing.VenueName, new { @class = "input-xlarge" })
                        <p class="help-block">In what venue is this instrument located?</p>
				        @Html.ValidationMessageFor(model => model.Listing.VenueName)
			        </div>
                </div>

			    <div class="control-group">
				    @Html.LabelFor(model => model.Listing.Equipment.SelectedClass, new { @class = "control-label" })
                    <div class="controls">
				        @Html.DropDownListFor(model => model.Listing.Equipment.SelectedClass, Model.Listing.Equipment.Classes)
                        <p class="help-block">Is this instrument out in the wild, like a piano in a hotel or in a bar, or is this an instrument that you personally own?</p>
				        @Html.ValidationMessageFor(model => model.Listing.Equipment.SelectedClass)
			        </div>
                </div>

			    <div class="control-group">
				    @Html.LabelFor(model => model.Listing.Price, new { @class = "control-label" })
			        <div class="controls">
				        @Html.TextBoxFor(model => model.Listing.Price, new { title = "price in local currency", @class = "input-xlarge" }) per @Html.TextBoxFor(model => model.Listing.TimeSpanOfPrice, new { title = "year, month, day, hour, etc.", @class = "input-xlarge" })
				        <p class="help-block">Are people required to pay to use this instrument? If so, how much must they pay per block of time?<br />For instance, you could enter a price of 10 per hour, where 10 is in the local currency.</p>
                        @Html.ValidationMessageFor(model => model.Listing.Price)
				        @Html.ValidationMessageFor(model => model.Listing.TimeSpanOfPrice)
			        </div>
                </div>

			    <div class="control-group">
				    @Html.LabelFor(model => model.Listing.GeneralInfoMarkdown, new { @class = "control-label" })
			        <div class="controls wmd-panel">
				        @Html.ValidationMessageFor(model => model.Listing.GeneralInfoMarkdown)
				        <p class="help-block">Please give <b>some general information</b> about this instrument, such as what kind of instrument it is, where it is located, when it is available, and what venue it is in.</p>
				        <div id="wmd-button-bar" class="wmd-panel"></div>
				        @Html.TextAreaFor(model => model.Listing.GeneralInfoMarkdown, new { @class = "wmd-input input-xlarge span7", rows = "8", id = "wmd-input" })
				        <div id="wmd-preview" class="wmd-preview wmd-panel span7" style="margin-left:0;"></div>
			        </div>
                </div>

                <div class="form-actions">
	                <input type="submit" class="btn btn-primary btn-large" value="Save changes">&nbsp;<button type="reset" onclick="window.history.go(-1);" class="btn btn-inverse">Cancel</button>
	            </div>
	        </fieldset>
        }
    </div>
</div>